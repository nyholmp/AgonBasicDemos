   10 REM TWIST2_ALI.BAS
   20 :
   30 REM WRITTEN BY PETE NYHOLM
   40 REM CREDIT FOR PROC_LOAD_LOGO AND PROC_DRAW_LOGO TO STEVE LOVEJOY
   50 REM CODE BASED ON ORIGINAL BOOTSCREEN.BAS VERSION 2.0
   60 REM CREDIT FOR ICON TO ARNOLD MESZAROS
   65 REM TESTED FOR MODE 0
   66 REM LOAD LOGO AS HEX DATA AND LOAD INTO STRING ARRAY
   70 :
   80 DIM L$(7) : REM INITIALIZE LOGO STRING ARRAY 
   85 FOR LL%=0 TO 7 : L$(LL%)="" : FOR LC%=1 TO 6 
   86   READ V% : L$(LL%)=L$(LL%)+CHR$(V%)
   87 NEXT LC% : NEXT LL%
   88 :
   90 DATA 032,032,200,201,032,032
  100 DATA 032,032,202,203,032,032
  110 DATA 032,204,205,206,207,032
  120 DATA 208,209,210,211,212,213
  130 DATA 214,215,216,209,217,218
  140 DATA 219,220,221,222,223,224
  150 DATA 225,226,227,228,229,230
  160 DATA 231,232,233,234,235,236
  170 :
  180 REM DECLARE ARRAYS FOR COMPUTED POLYGON VERTICES UP TO 12 SIDES
  190 DIM PX(12), PY(12)
  200 REM DECLARE ARRAYS FOR SIN AND COS TO 0.1 DEG, NEED 10*360 X 1 LOOKUP TABLE
  210 DIM LCOS(3600), LSIN(3600)
  220 REM SET MAXIMUM COLORS TO USE FOR MODE 0
  230 MAXC%=15
  240 BGCOL%=0 : COLOUR 128+BGCOL%
  245 MODE 0 : CLS
  260 PROC_LOAD_LOGO
  270 LCOL%=29 : LROW%=26 : REM CENTERS LOGO FOR MODE 0
  280 PROC_DRAW_LOGO(LCOL%-10,LROW%-2,4)
  290 PRINT TAB(30,50)"COMPUTING SIN, COS ARRAYS, ANGLE=";
  300 REM SHOW FUN CIRCULAR PATTERN WHEN COMPUTING SIN AND COS
  310 R=100 : REM RADIUS OF PATTERN
  320 W=10 : REM WIDTH OF PATTERN
  330 FOR A%=0 TO 3600
  340   LCOS(A%)=COS(RAD(A%/10))
  350   LSIN(A%)=SIN(RAD(A%/10))
  360   IF (A% MOD 10) <> 0 THEN GOTO 400
  370   GCOL 0,A%/10 MOD (MAXC% + 1)
  380   PLOT 4,512+R*LCOS(A%),512+R*LSIN(A%)
  390   PLOT 5,512+(R+W)*LCOS(A%),512+(R+W)*LSIN(A%)
  400   R=R+LSIN(A%)/4
  410   W=W+LCOS(A%)/4
  420 NEXT A%
  430 MAXX%=1024
  440 APER%=100 : REM MIN APERATURE FOR CENTER
  441 MAXST%=30 : REM DEFAULT IS 30
  442 MINSC=0.2 : REM DEFAULT IS 0.2
  443 MAXSI%=8  : REM DEFAULT IS 8
  450 CLS
  460 REM RANDOMIZE ANGLE SIZE BETWEEN POLYGON VERTICES
  470 ASTEP%=10*(1+RND(MAXST%-1)) : REM RANDOM ANGLE UP TO MAXSTEP
  480 REM RANDOMIZE SCALING FACTOR FOR EACH SUCCESSIVE POLYGON IN PATTERN 
  490 SCALE=1-MINSC+RND(MINSC*100-1)/100
  500 REM LOOP FOR NUMBER OF SIDES FOR EACH POLYGON (MIN 2) : MIN 3 FOR LOGO
  510 FOR S%=3 TO MAXSI%
  520   FOR C%=0 TO MAXC%
  530     COLOUR C% 
  540     D%=C% DIV 16 : PRINT TAB(66+3*D%,27+C%-16*D%);"";C%;
  550   NEXT C%
  560   REPEAT LCOLOR%=1+RND(14) : UNTIL LCOLOR% <> BGCOL% 
  570   PROC_DRAW_LOGO(LCOL%,LROW%,LCOLOR%)
  580   PRINT TAB(53,1)"HIT KEY DURING PAUSE";
  590   PRINT TAB(53,2)"TO CHANGE";
  591   PRINT TAB(56,3)"B: BG COLOR";
  592   PRINT TAB(56,4)"A: MAX ANGLE";
  593   PRINT TAB(56,5)"S: SCALE";
  594   PRINT TAB(56,6)"N: MAX POLY SIDES";
  595   PRINT TAB(56,7)"Q: QUIT";
  600   PRINT TAB(62,11)"ANGLE=";ASTEP%/10
  610   PRINT TAB(62,12)"SCALE=";SCALE;
  620   PRINT TAB(62,13)"BGCOL=";BGCOL%;
  630   PRINT TAB(62,14)"SIDES=";S%;
  631   PRINT TAB(62,15)"MAX ANG=";MAXST%;
  632   PRINT TAB(66 ,26)"COLORS";
  640   REM CALCULATE ANGLE IN 10THS OF DEG FOR NUMBER OF SIDES
  650   ASIDE=3600/S% : C%=0 : X%=MAXX%/2
  680   FOR A%=0 TO ASIDE STEP ASTEP%
  690     REPEAT C%=C%+1 UNTIL C% <> BGCOL% : REM AVOID BACKGROUND COLOR
  700     GCOL 0,C%
  710     PROC_POLY(X%,MAXX%,A%,S%)
  720     IF C%>MAXC% THEN C%=0
  730   NEXT A%
  740   REM COMPUTE NEXT X VALUE SCALED FROM PREVIOUS UNTIL MIN OF APER%
  750   X%=X%*SCALE
  760   IF X% >= APER% + 54/(S%-2) THEN GOTO 680
  790   REM INTRODUCE DELAY BETWEEN EACH NEW NUMBER OF SIDES
  800   K=INKEY(100)
  810   IF K=66 THEN INPUT TAB(1,40)"ENTER NEW BACKGROUND COLOR",BC$ : BGCOL%=VAL(BC$) : COLOUR 128+BGCOL%
  811   IF K=65 THEN INPUT TAB(1,40)"ENTER NEW MAX ANGLE STEP",MAS$ : MAXST%=VAL(MAS$)
  812   IF K=83 THEN INPUT TAB(1,40)"ENTER SCALE 1-10",SC$ : MINSC=(11-VAL(SC$))/20
  813   IF K=78 THEN INPUT TAB(1,40)"MAX POLYGON SIDES 3-12",MS$ : MAXSI%=VAL(MS$)
  814   IF K=81 THEN GOTO 845
  820   CLS
  830 NEXT S%
  840 GOTO 460
  845 PRINT "THANKS FOR TRYING THE PROGRAM."
  850 END
  860 REM DEFINE PROCEDURE TO PLOT POLYGON
  870 REM GIVEN RADIUS, MAX X, STARTING ANGLE, AND NUMBER OF SIZES
  880 DEF PROC_POLY(XP%,MAXXP%,AP,NS%)
  890 CENTER%=MAXXP%/2
  900 FOR I%=1 TO NS%
  910   ADP%=INT(AP+(I%-1)*ASIDE)
  920   PX(I%)=CENTER%-XP%*LCOS(ADP%)
  930   PY(I%)=CENTER%-XP%*LSIN(ADP%)
  940   IF I% = 1 THEN PLOT 4,PX(1),PY(1) ELSE PLOT 5,PX(I%),PY(I%)
  950 NEXT I%
  960 PLOT 5,PX(1),PY(1)
  970 ENDPROC
  980 :
  990 DEF PROC_DRAW_LOGO(COL%,ROW%,LC%) : REM COLUMN, ROW, COLOR
 1000 REM DISPLAY THE LOGO LINE BY LINE FROM LOGO ARRAY
 1010 COLOUR LC%
 1020 FOR I%=0 TO 7 : PRINT TAB(COL%,ROW%+I%);L$(I%); : NEXT I%
 1050 ENDPROC
 1060 :
 1070 DEF PROC_LOAD_LOGO
 1080 REM AGON LIGHT "Sitting Kung Fu man" LOAD LOGO CHARS
 1090 FOR AC%=200 TO 237 : VDU 23,AC%
 1100   FOR I%=1 TO 8 : READ V$ : H%=EVAL("&"+V$) : VDU H% : NEXT I%
 1110 NEXT AC%
 1120 ENDPROC
 1130 REM HEX VALUES FOR CUSTOM LOGO CHARACTERS TO BE READ INTO VDU
 1140 DATA 07,0F,1F,1F,1F,1F,1F,3F, C0,E0,F0,F0,F0,F0,F0,F8
 1145 DATA 3F,3F,1F,0F,0F,0F,07,07, F8,F8,F0,E0,E0,E0,C0,C0
 1150 DATA 00,01,07,0F,1F,3F,7F,7F, 07,C7,C7,C3,E3,E1,F0,F0
 1160 DATA C0,C3,C3,87,87,0F,0F,1F, 00,00,E0,F0,F8,FC,FC,FE
 1170 DATA 00,00,01,01,03,03,07,07, FF,FF,FF,FF,FF,FF,FF,FF
 1175 DATA F8,F8,F8,F0,E0,E1,C1,C3, 3F,3F,7F,FF,FF,FF,FF,FF
 1180 DATA FF,FF,FF,FF,FF,FF,DF,DF, 00,00,80,80,80,C0,C0,C0
 1190 DATA 07,07,0F,0F,0F,0F,0F,1F, FF,F7,E7,E7,E7,C7,87,82
 1195 DATA C7,87,87,8F,0F,0F,1F,1F, CF,CF,CF,C7,C7,C3,81,01
 1200 DATA E0,E0,E0,F0,F0,F0,F0,F0, 1F,1F,1F,1F,0F,0F,0F,1F
 1210 DATA 80,80,80,80,81,8F,87,8F, 1F,3F,0F,00,80,E0,E0,C3
 1215 DATA FC,F0,80,00,03,07,23,F3, 01,01,01,81,C1,E1,F1,F1
 1220 DATA F0,F0,F0,F0,F0,F0,F0,F0, 1F,1F,03,03,03,03,07,0F
 1230 DATA DF,FF,FF,FF,FF,FF,FE,FE, C7,87,87,07,0F,0F,1F,1F
 1240 DATA F1,F1,F1,F8,F8,F8,F8,F8, FD,FF,FF,FF,FF,FF,FF,7F
 1245 DATA F0,F8,F8,E0,E0,E0,F0,F8, 1F,3F,3F,3F,1F,1F,0F,00
 1250 DATA FE,FC,FC,FC,F8,F8,E0,00, 1F,3C,20,00,00,00,00,00
 1255 DATA 78,1C,0C,0C,00,00,00,00, 7F,7F,7F,7F,7F,3F,0F,00
 1260 DATA F8,FC,FC,FC,FC,F8,F0,00, FF,FE,FC,F8,F0,E0,C0,80
